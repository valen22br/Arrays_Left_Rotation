#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <unordered_map>

using namespace std;

int number_needed(string a, string b) {
    int count = 0,
        control_1 = 0,
        control_2 = 0,
        maxIterations = 0;
    
    bool result = false;
    
    for(int i = 0; i < a.length(); i++)
    {
        a[i] = tolower(a[i]);
    }
    
    for(int i = 0; i < b.length(); i++)
    {
        b[i] = tolower(b[i]);
    }
    
    if(a.length() <= b.length())
    {
        //count = b.length() - a.length();
        maxIterations = a.length();
    }else if(a.length() >= b.length())
    {
        //count = a.length() - b.length();
        maxIterations = b.length();
    }
    
    //cout << "count: "<< count << " maxIt: " << maxIterations << endl;
    
    
    sort(a.begin(), a.end());
    sort(b.begin(), b.end());
    //cout << "String a: " << a << endl;
    //cout << "String b: " << b << endl;
   for(int i = 0; i < a.length(); i++)
   {
       for(int j = control_2; j < b.length(); j++)
       {
            result = (a[i] == b[j]);    
            //cout << "comparing "<< a[i] << " with " << b[j] <<endl;
            if (result)
            {
               count++;
               result = 0;
               j++;
               control_2++;
               break;
            }
           control_2++;
       }
       control_2 = 0;
       
       
   }
    //cout << "count: "<< count << " maxIt: " << maxIterations << endl;
    //cout << "a length: " << a.length() << " b length: "<< b.length() << endl;
    count = 2*count - (a.length() + b.length());
    return abs(count);
}

int main(){
    string a;
    //cin >> a;
    getline(cin, a);
    string b;
    //cin >> b;
    getline(cin, b);
    cout << number_needed(a, b) << endl;
    return 0;
}
